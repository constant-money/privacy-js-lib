const SK = 0x00;
const VALUE = 0x01;
const SND = 0x02;
const SHARD_ID = 0x03;
const RAND = 0x04;
const FULL = 0x05;
const PAYMENT_ADDR_SIZE = 66;
const TRANSMISSION_KEY_SIZE = 33;
const PUBLIC_KEY_SIZE = 33;
const VIEWING_KEY_SIZE = 65;
const COMPRESS_POINT_SIZE = 33;
const BIG_INT_SIZE = 32;
const MAX_VALUE = 18446744073709551616;
const MAX_EXP = 64;

const ENCRYPTED_RANDOMNESS_SIZE = 48; //bytes
const ENCRYPTED_SYM_KEY_SIZE = 66; //bytes
const ELGAMAL_CIPHERTEXT_SIZE = 66;

const AES_BLOCK_SIZE = 16;

const PRIVACY_VERSION = 0x00;

const HASH_SIZE = 32; // bytes

const CM_RING_SIZE = 8; // 2^3
const CM_RING_SIZE_EXP = 3;

// size of zero knowledge proof corresponding one input
const ONE_OF_MANY_PROOF_SIZE = 716;
const SN_PRIVACY_PROOF_SIZE = 326;
const SN_NO_PRIVACY_PROOF_SIZE = 196;
const INPUT_COINS_PRIVACY_SIZE = 40;
const OUTPUT_COINS_CONSTANTS_SIZE = 223;
const INPUT_COINS_NO_PRIVACY_SIZE = 178; // PublicKey + coin commitment + SND + Serial number + Randomness + Value + 7 flag
const OUTPUT_COINS_NO_PRIVACY_SIZE = 147;
// size of zero knowledge proof corresponding one output
const COM_ZERO_PROOF_SIZE = 99;

const SHARD_NUMBER = 1;

const UINT64_SIZE = 8; // bytes

const NUM_PROOF_PROPERTIES = 14;

const PC_CAPACITY = 5;

module.exports = {
    PAYMENT_ADDR_SIZE,
    TRANSMISSION_KEY_SIZE,
    PUBLIC_KEY_SIZE,
    VIEWING_KEY_SIZE,
    COMPRESS_POINT_SIZE,
    BIG_INT_SIZE,
    PC_CAPACITY,
    SK,
    VALUE,
    SND,
    SHARD_ID,
    RAND,
    FULL,
    ENCRYPTED_RANDOMNESS_SIZE,
    ENCRYPTED_SYM_KEY_SIZE,
    HASH_SIZE,
    CM_RING_SIZE,
    CM_RING_SIZE_EXP,
    MAX_EXP,
    MAX_VALUE,
    ONE_OF_MANY_PROOF_SIZE,
    SN_PRIVACY_PROOF_SIZE,
    SN_NO_PRIVACY_PROOF_SIZE,
    COM_ZERO_PROOF_SIZE,
    SHARD_NUMBER,
    UINT64_SIZE,
    NUM_PROOF_PROPERTIES,
    ELGAMAL_CIPHERTEXT_SIZE,
    AES_BLOCK_SIZE,
    PRIVACY_VERSION,
    INPUT_COINS_NO_PRIVACY_SIZE,
    OUTPUT_COINS_NO_PRIVACY_SIZE,
    INPUT_COINS_PRIVACY_SIZE,
    OUTPUT_COINS_CONSTANTS_SIZE
};